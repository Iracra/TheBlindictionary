<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Carico Foglio di stile CSS -->
    <link id="styleLink" rel="stylesheet" type="text/css" href="/views/style.css">
    <title>The Blind Dictionary</title>
</head>


<body aria-label="The Blind Dictionary">
    <h1>The Blind Dictionary</h1>
    <input type="text" id="wordInput" placeholder="Searchbar"></input>  <!-- Barra di ricerca -->
    <button id="searchButton">Search Term</button> <!-- Pulsante di ricerca con evento ugale a "enter" su barra di ricerca -->
    <button id="clearButton">Clear</button> <!-- Refresh ricerca -->
    <button id="settings-button" onclick="redirectToSettings()">Page Settings</button> <!-- Pulsante per navigazione ad opzioni -->
    <div id="results"></div> <!-- Contenitore risultati link (default vuoto) -->
    <div id="details" hidden="false"> <!-- Contenitore dettagli link cliccato (default nascosto) -->
        <h1 id="detailsHdr" aria-label="Terms Details">Terms Details:
            <div id="datailCont" aria-label="Content">

            </div>
        </h1>
    </div>
    <script type="text/javascript" src="/views/script.js"></script> <!-- Script del controller -->
    <script src="https://code.responsivevoice.org/responsivevoice.js?key=fbCBzWk0"></script> <!-- Libreria esterna per pronuncia audio text-to speech -->
    <script>
        function redirectToSettings() {
            const currentURL = new URL(window.location.href);

            /* Catturo i parametri  */
            const bgColor = currentURL.searchParams.get('bgColor');
            const textColor = currentURL.searchParams.get('textColor');
            const textFont = currentURL.searchParams.get('textFont');
            const textSize = currentURL.searchParams.get('textSize');

            /* Se li trovo navigo con parametri */
            var url = `/settings?bgColor=${bgColor}&textColor=${textColor}&textFont=${textFont}&textSize=${textSize}`;
            if (bgColor && textColor && textFont && textSize) {
          

                window.location.replace(url);
                window.location.href = url;
            } else { /*  Se non li trovo navigo senza (default) */
              
                window.location.replace('/settings');
                window.location.href = '/settings';
            }
        }
             /* Funzione per applicare stile a tutti gli elementi */
        function applyStylesToAllElements(bgColor, textColor, textFont, textSize) {
            
            const allElements = document.querySelectorAll('*');

           
            allElements.forEach((element) => {
                element.style.backgroundColor = bgColor;
                element.style.color = textColor;
                element.style.fontFamily = textFont;
                element.style.fontSize = textSize;
            });
        }

           /* Al caricamento della pagina applico il CSS proveniente dalla homepage ( per non perdere valori durante navigazione) */
        window.onload = function () {

            const currentURL = new URL(window.location.href);
            const bgColor = currentURL.searchParams.get('bgColor');
            const textColor = currentURL.searchParams.get('textColor');
            const textFont = currentURL.searchParams.get('textFont');
            const textSize = currentURL.searchParams.get('textSize');
            if (bgColor && textColor && textFont && textSize) {
         
            applyStylesToAllElements(bgColor, textColor, textFont, textSize);
            }
        };
    </script>
</body>

</html>